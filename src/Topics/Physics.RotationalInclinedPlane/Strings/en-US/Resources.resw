<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDescription" xml:space="preserve">
    <value>When rolling bodies along an inclined plane, we must take into account not only the angle of the inclined plane, but also the dimensions of the body and its shape (or mass distribution).
The program allows the selection of basic parameters (height and length of the inclined plane, dimensions and shape of the body - sphere, cylinder, hollow cylinder) and animates the rotational movement of the body along the inclined plane. Lists the calculated values of the selected quantities in the table. 

Content authors: Vladimír Kafka, Pavel Vlček
Programmers: Daniel Zikmund, Martin Zikmund
Graphics: Petr Weinlich</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Playing with Physics: Rolling on Inclined Plane</value>
  </data>
  <data name="BestScore" xml:space="preserve">
    <value>Best score</value>
  </data>
  <data name="BodyType_FullCylinder" xml:space="preserve">
    <value>Full cylinder</value>
  </data>
  <data name="BodyType_HollowCylinder" xml:space="preserve">
    <value>Hollow cylinder</value>
  </data>
  <data name="BodyType_Sphere" xml:space="preserve">
    <value>Sphere</value>
  </data>
  <data name="ChangesApplyToAll" xml:space="preserve">
    <value>Changes apply to all objects</value>
  </data>
  <data name="Dialog_EndGame_Exact" xml:space="preserve">
    <value>So Neil, your best time was {0} s, which is exactly as I requested!</value>
  </data>
  <data name="Dialog_EndGame_NotExact" xml:space="preserve">
    <value>So Neil, your best time was {0} s, which is {1} % different than I requested!</value>
  </data>
  <data name="Dialog_EndGame_Over10" xml:space="preserve">
    <value>You have still much to learn!</value>
  </data>
  <data name="Dialog_EndGame_Under10" xml:space="preserve">
    <value>There is still room for improvement, keep trying.</value>
  </data>
  <data name="Dialog_EndGame_Under5" xml:space="preserve">
    <value>Exceptional work, let's go for lunch!</value>
  </data>
  <data name="Dialog_SetAngle" xml:space="preserve">
    <value>Hey Neil, roll in the barrel in {0} s!</value>
  </data>
  <data name="GameDesiredTime" xml:space="preserve">
    <value>Desired time:</value>
  </data>
  <data name="Input_Angle" xml:space="preserve">
    <value>Angle</value>
  </data>
  <data name="Input_Body" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="Input_BodyType" xml:space="preserve">
    <value>Body type</value>
  </data>
  <data name="Input_Environment" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="Input_General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Input_Gravity" xml:space="preserve">
    <value>Gravity</value>
  </data>
  <data name="Input_InclinedPlane" xml:space="preserve">
    <value>Inclined plane</value>
  </data>
  <data name="Input_Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="Input_Mass" xml:space="preserve">
    <value>Mass</value>
  </data>
  <data name="Input_Radius" xml:space="preserve">
    <value>Radius</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New game</value>
  </data>
  <data name="NextAttempt" xml:space="preserve">
    <value>Next attempt</value>
  </data>
  <data name="PlaneLengthValidationHundredMessage" xml:space="preserve">
    <value>Length of the inclined plane must be at most 100 times bigger than the radius of any of the objects. The following objects currently violate this rule: {0}.</value>
  </data>
  <data name="PlaneLengthValidationTenMessage" xml:space="preserve">
    <value>Length of the inclined plane must be at least 10 times bigger than the radius of any of the objects. The following objects currently violate this rule: {0}.</value>
  </data>
  <data name="PlaneLengthValidationTitle" xml:space="preserve">
    <value>Input error</value>
  </data>
  <data name="ShortAppName" xml:space="preserve">
    <value>Rolling on Inclined Plane</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartRolling" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TooManyMotionsDescription" xml:space="preserve">
    <value>Can't render more than 5 motions at once. Plese remove one.</value>
  </data>
  <data name="TooManyMotionsTitle" xml:space="preserve">
    <value>Can't add another motion</value>
  </data>
</root>