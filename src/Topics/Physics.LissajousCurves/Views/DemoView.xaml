<local:DemoViewBase
    x:Class="Physics.LissajousCurves.Views.DemoView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Physics.Shared.Extensions"
    xmlns:local="using:Physics.LissajousCurves.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sharedControls="using:Physics.Shared.UI.Controls"
    xmlns:viewModels="using:Physics.LissajousCurves.ViewModels"
	xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    x:Name="Page"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    RequestedTheme="Dark"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <DrillInNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <SolidColorBrush x:Key="NavigationViewDefaultPaneBackground" Color="{StaticResource AppThemeColor}" />
        <SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="{StaticResource AppThemeColor}" />
        <SolidColorBrush x:Key="NavigationViewExpandedPaneBackground" Color="{StaticResource AppThemeColor}" />
		<Style x:Key="InfoTextBlockStyle" TargetType="TextBlock">
			<Setter Property="FontSize" Value="18" />
			<Setter Property="Margin" Value="0,0,0,2" />
		</Style>
		<Style x:Key="ListViewItemStretchStyle" TargetType="ListViewItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		</Style>
		<DataTemplate x:Key="OscillationFrequencyListItemDataTemplate" x:DataType="viewModels:DemoItemViewModel">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0">
					<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": "/><Run Text="{Binding X.OscillationInfo.Frequency}"></Run><Run Text=" Hz"/>
				</TextBlock>
				<TextBlock Grid.Column="1">
					<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": "/><Run Text="{Binding Y.OscillationInfo.Frequency}"></Run><Run Text=" Hz"/>
				</TextBlock>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="OscillationAmplitudeListItemDataTemplate" x:DataType="viewModels:DemoItemViewModel">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0">
					<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": "/><Run Text="{Binding X.OscillationInfo.Amplitude}"></Run><Run Text=" m"/>
				</TextBlock>
				<TextBlock Grid.Column="1">
					<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": "/><Run Text="{Binding Y.OscillationInfo.Amplitude}"></Run><Run Text=" m"/>
				</TextBlock>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="OscillationPhaseListItemDataTemplate" x:DataType="viewModels:DemoItemViewModel">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0">
					<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": "/><Run Text="{Binding X.OscillationInfo.PhaseInDeg}"></Run><Run Text="°"/>
				</TextBlock>
				<TextBlock Grid.Column="1">
					<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": "/><Run Text="{Binding Y.OscillationInfo.PhaseInDeg}"></Run><Run Text="°"/>
				</TextBlock>
			</Grid>
		</DataTemplate>


		<DataTemplate x:Key="OscillationPanelDataTemplate" x:DataType="viewModels:DemoItemViewModel">
			<TextBlock Text="{x:Bind Label}"/>
			<!--<Grid ColumnSpacing="16" RowSpacing="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.RowSpan="2" Width="8" CornerRadius="2">
                    <Border.Background>
                        <SolidColorBrush Color="{x:Bind OscillationInfo.Color, Mode=OneWay}" />
                    </Border.Background>
                </Border>
                <Grid
					Grid.Column="1"
                    ColumnSpacing="8"
                    CornerRadius="2"
                    RowSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        VerticalAlignment="Center"
                        Style="{ThemeResource SubtitleTextBlockStyle}"
                        Text="{x:Bind Label, Mode=OneWay}"
						FontWeight="SemiBold"
						TextLineBounds="Tight"
                        TextTrimming="CharacterEllipsis"
						TextWrapping="NoWrap" />

                    <ToggleButton IsChecked="{x:Bind IsVisible, Mode=TwoWay}" Grid.Column="1">
                        <SymbolIcon Symbol="View" />
                    </ToggleButton>
                    <Button Grid.Column="3" Command="{Binding ElementName=Page, Path=Model.EditOscillationCommand}" CommandParameter="{x:Bind}">
                        --><!--<Button.Flyout>
							<MenuFlyout>
								<MenuFlyoutItem
									Command="{Binding ElementName=Page, Path=Model.ShowValuesTableCommand}"
									CommandParameter="{x:Bind}"
									Text="{extensions:Localize Key=ShowValuesTable}">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="ViewAll" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutSeparator />
								<MenuFlyoutItem
                                    Command="{Binding ElementName=Page, Path=Model.EditOscillationCommand}"
                                    CommandParameter="{x:Bind}"
                                    Text="{extensions:Localize Key=Edit}">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="Edit" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem
                                    Command="{Binding ElementName=Page, Path=Model.DuplicateOscillationCommand}"
                                    CommandParameter="{x:Bind}"
                                    Text="{extensions:Localize Key=Duplicate}">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="Copy" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
								<MenuFlyoutItem
                                    Command="{Binding ElementName=Page, Path=Model.DeleteOscillationCommand}"
                                    CommandParameter="{x:Bind}"
                                    Text="{extensions:Localize Key=Delete}">
									<MenuFlyoutItem.Icon>
										<SymbolIcon Symbol="Delete" />
									</MenuFlyoutItem.Icon>
								</MenuFlyoutItem>
							</MenuFlyout>
						</Button.Flyout>--><!--
                        <SymbolIcon Symbol="Edit" />
                    </Button>
                </Grid>
                --><!--<Grid
						Grid.Row="1"
						Grid.Column="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock
							Grid.Row="1"
							Grid.Column="1"
							Style="{StaticResource InfoTextBlockStyle}">
							<Run Text="y: " />
							<Run Text="{x:Bind CurrentY, Mode=OneWay}" />
						</TextBlock>
					</Grid>--><!--
            </Grid>-->
        </DataTemplate>
    </Page.Resources>
	
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="320" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid
            x:Name="MenuPane"
            Grid.Column="0">
            <Grid.Background>
                <AcrylicBrush TintColor="{ThemeResource AppThemeColor}" TintOpacity="0.85" BackgroundSource="HostBackdrop" FallbackColor="{ThemeResource AppThemeColor}" />
            </Grid.Background>
            <Windows10version1903:Grid.Shadow>
                <ThemeShadow />
            </Windows10version1903:Grid.Shadow>
			<Border Grid.Row="1">
				<ScrollViewer Padding="12" VerticalScrollBarVisibility="Auto">
                    <StackPanel Grid.Column="0" Orientation="Vertical">
						<StackPanel.ChildrenTransitions>
							<TransitionCollection>
								<EntranceThemeTransition FromVerticalOffset="100" IsStaggeringEnabled="True" />
							</TransitionCollection>
						</StackPanel.ChildrenTransitions>
						<sharedControls:SkewedMenuHeader GoBackCommand="{x:Bind Model.GoBackCommand}" Text="{extensions:Localize Key=ShortAppName}" />

						<TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{extensions:Localize Key=Frequency}"></TextBlock>
						<Grid Margin="0,8,0,0" RowSpacing="8">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center">X</TextBlock>
							<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center">Y</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="0">
								<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": 1 m"/>
							</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="1">
								<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": 1 m"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="0">
								<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": 0°"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="1">
								<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": 0°"/>
							</TextBlock>
							<TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" FontWeight="SemiBold" Text="{extensions:Localize Key=ChooseFrequency}"/>
						</Grid>
						<ListView x:Name="FrequencyListView" ItemsSource="{x:Bind Model.DemoOscillationsFrequency, Mode=OneWay}" SelectionChanged="ListView_SelectionChanged" ItemTemplate="{StaticResource OscillationFrequencyListItemDataTemplate}" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"/>
						
						<NavigationViewItemSeparator/>

						<TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{extensions:Localize Key=Amplitude}"></TextBlock>
						<Grid Margin="0,8,0,0" RowSpacing="8">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center">X</TextBlock>
							<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center">Y</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="0">
								<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": 0,5 Hz"/>
							</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="1">
								<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": 0,5 Hz"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="0">
								<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": 0°"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="1">
								<Run Text="{extensions:Localize Key=StartPhase}"/><Run Text=": 90°"/>
							</TextBlock>
							<TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" FontWeight="SemiBold" Text="{extensions:Localize Key=ChooseAmplitudes}"/>
						</Grid>
						<ListView x:Name="AmplitudeListView" ItemsSource="{x:Bind Model.DemoOscillationsAmplitude, Mode=OneWay}" SelectionChanged="ListView_SelectionChanged" ItemTemplate="{StaticResource OscillationAmplitudeListItemDataTemplate}" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}" />
						
						<NavigationViewItemSeparator/>

						<TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{extensions:Localize Key=StartPhase}"></TextBlock>
						<Grid Margin="0,8,0,0" RowSpacing="8">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="Auto"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
								<RowDefinition Height="*"></RowDefinition>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center">X</TextBlock>
							<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center">Y</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="0">
								<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": 0,5 Hz"/>
							</TextBlock>
							<TextBlock Grid.Row="1" Grid.Column="1">
								<Run Text="{extensions:Localize Key=Frequency}"/><Run Text=": 0,5 Hz"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="0">
								<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": 1 m"/>
							</TextBlock>
							<TextBlock Grid.Row="2" Grid.Column="1">
								<Run Text="{extensions:Localize Key=Amplitude}"/><Run Text=": 1 m"/>
							</TextBlock>
							<TextBlock Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" FontWeight="SemiBold" Text="{extensions:Localize Key=ChooseStartPhases}"/>
						</Grid>
						<ListView x:Name="StartPhaseListView" ItemsSource="{x:Bind Model.DemoOscillationsPhase, Mode=OneWay}" SelectionChanged="ListView_SelectionChanged" ItemTemplate="{StaticResource OscillationPhaseListItemDataTemplate}" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"/>
						<!--<Grid RowSpacing="8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>


                            <ContentControl Grid.Row="1" ContentTemplat{StaticResource OscillationPanelDataTemplate}" Content="{x:Bind Model.HorizontalOscillation}" />

                            <ContentControl Grid.Row="2" ContentTemplate="{StaticResource OscillationPanelDataTemplate}" Content="{x:Bind Model.VerticalOscillation}" />
                            <CheckBox Grid.Row="3" Content="{extensions:Localize Key=ShowTrajectory}" IsChecked="{x:Bind Model.NoTrajectory, Mode=TwoWay}"/>
                            <controls:NumberBox Grid.Row="4" Header="Délka stopy" Grid.Column="1" Value="{x:Bind Model.DrawLength, Mode=TwoWay}" SpinButtonPlacementMode="Inline" Minimum="0" SmallChange="1"/>
                            --><!--<Button
									Grid.Row="5"
									Margin="0,0,0,8"
									HorizontalAlignment="Stretch"
									Command="{x:Bind Model.ShowCompoundOscillationValuesTableCommand}">
								<StackPanel Orientation="Horizontal" Spacing="8">
									<Viewbox
                                        Width="16"
                                        Height="16"
                                        VerticalAlignment="Center">
										<SymbolIcon Symbol="ViewAll" />
									</Viewbox>
									<TextBlock Text="{extensions:Localize Key=ShowTableOfVisibleOscillations}" />
								</StackPanel>
							</Button>--><!--
                        </Grid>-->
                    </StackPanel>
                </ScrollViewer>
            </Border>

        </Grid>
        <Grid
            x:Name="SecondPane"
            Grid.Column="1"
            Padding="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
				<RowDefinition Height="5*"/>
				<RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="CanvasHolder" Background="#F4F4F4" Grid.RowSpan="2" />
            <InkCanvas x:Name="InkCanvas" Grid.RowSpan="2" />
            <InkToolbar
                x:Name="inkToolbar"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                RequestedTheme="Light"
                TargetInkCanvas="{x:Bind InkCanvas}" />
            <sharedControls:SimulationControls
                Grid.Row="2"
				d:Visibility="Collapsed"
                IsPaused="{x:Bind Model.SimulationPlayback.IsPaused, Mode=OneWay}"
                JumpBackCommand="{x:Bind Model.SimulationPlayback.JumpBackCommand}"
                JumpForwardCommand="{x:Bind Model.SimulationPlayback.JumpForwardCommand}"
                JumpSize="{x:Bind Model.SimulationPlayback.JumpSize, Mode=TwoWay}"
                JumpToEndCommand="{x:Bind Model.SimulationPlayback.JumpToEndCommand}"
                JumpToStartCommand="{x:Bind Model.SimulationPlayback.JumpToStartCommand}"
                PauseCommand="{x:Bind Model.SimulationPlayback.PauseCommand}"
                PlayCommand="{x:Bind Model.SimulationPlayback.PlayCommand}"
                RequestedTheme="Light"
                SimulationSpeed="{x:Bind Model.SimulationPlayback.PlaybackSpeed, Mode=TwoWay}">
                <sharedControls:SimulationControls.Background>
                    <AcrylicBrush
                        BackgroundSource="Backdrop"
                        FallbackColor="{ThemeResource SystemChromeMediumColor}"
                        TintColor="{ThemeResource SystemChromeMediumColor}" />
                </sharedControls:SimulationControls.Background>
            </sharedControls:SimulationControls>
        </Grid>
    </Grid>
</local:DemoViewBase>
