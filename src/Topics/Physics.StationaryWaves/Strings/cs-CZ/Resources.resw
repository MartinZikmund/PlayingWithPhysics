<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddWave" xml:space="preserve">
    <value>Přidat vlnění</value>
  </data>
  <data name="AdvancedBounceType_Oscillating" xml:space="preserve">
    <value>Odraz na volném konci</value>
  </data>
  <data name="AdvancedBounceType_Static" xml:space="preserve">
    <value>Odraz na pevném konci</value>
  </data>
  <data name="ALabel" xml:space="preserve">
    <value>a:</value>
  </data>
  <data name="Amplitude" xml:space="preserve">
    <value>Amplituda</value>
  </data>
  <data name="AmplitudeLabel" xml:space="preserve">
    <value>Amplituda:</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Animace zobrazí odraz jedné vlny na pevném či volném konci nebo pomocí principu superpozice zobrazí stojaté vlnění složením přímého a odraženého vlnění. 

Autoři obsahu: Pavel Mládek, Pavel Jirman
Programátoři: Daniel Zikmund, Martin Zikmund
Grafika: Petr Weinlich</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Hrátky s fyzikou: Stojaté vlnění</value>
  </data>
  <data name="AVariantPiLabel" xml:space="preserve">
    <value>vlevo uzel</value>
  </data>
  <data name="AVariantZeroLabel" xml:space="preserve">
    <value>vlevo kmitna</value>
  </data>
  <data name="AVariant_Pi" xml:space="preserve">
    <value>a = π</value>
  </data>
  <data name="AVariant_Zero" xml:space="preserve">
    <value>a = 0</value>
  </data>
  <data name="BaseWaves" xml:space="preserve">
    <value>Skládaná vlnění</value>
  </data>
  <data name="BounceType" xml:space="preserve">
    <value>Typ odrazu</value>
  </data>
  <data name="BounceType_Oscillating" xml:space="preserve">
    <value>Kmitna</value>
  </data>
  <data name="BounceType_Static" xml:space="preserve">
    <value>Uzel</value>
  </data>
  <data name="BouncingPoint" xml:space="preserve">
    <value>Místo odrazu</value>
  </data>
  <data name="BouncingPoints_FreeEnd" xml:space="preserve">
    <value>Na volném konci</value>
  </data>
  <data name="BouncingPoints_RigidEnd" xml:space="preserve">
    <value>Na pevném konci</value>
  </data>
  <data name="DisplaySettings" xml:space="preserve">
    <value>Nastavení zobrazení</value>
  </data>
  <data name="DistanceIntervalForTable" xml:space="preserve">
    <value>Interval vzdálenosti (m):</value>
  </data>
  <data name="DrawingRangeLabel" xml:space="preserve">
    <value>Rozsah:</value>
  </data>
  <data name="EditWave" xml:space="preserve">
    <value>Upravit vlnění</value>
  </data>
  <data name="LeftEndType" xml:space="preserve">
    <value>Levý konec</value>
  </data>
  <data name="OnlySecondWave" xml:space="preserve">
    <value>(platí jen pro druhé vlnění)</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Rozsah</value>
  </data>
  <data name="ResultingWave" xml:space="preserve">
    <value>Výsledné vlnění</value>
  </data>
  <data name="RightEndDistance" xml:space="preserve">
    <value>Vzdálenost pravého konce (násobek λ)</value>
  </data>
  <data name="SetWaves" xml:space="preserve">
    <value>Nastavit vlnění</value>
  </data>
  <data name="ShortAppName" xml:space="preserve">
    <value>Stojaté vlnění</value>
  </data>
  <data name="ShowValuesTable" xml:space="preserve">
    <value>Zobrazit tabulku hodnot</value>
  </data>
  <data name="StationaryWaves" xml:space="preserve">
    <value>Stojaté vlnění</value>
  </data>
  <data name="TimeForTable" xml:space="preserve">
    <value>Čas (s):</value>
  </data>
  <data name="Wave" xml:space="preserve">
    <value>Vlnění</value>
  </data>
  <data name="WavePackage" xml:space="preserve">
    <value>Vlnový obal</value>
  </data>
</root>